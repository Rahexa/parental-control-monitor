name: Android Build Fixed

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Fix gradlew encoding and permissions
      run: |
        # Remove BOM and fix line endings completely
        sed -i '1s/^\xEF\xBB\xBF//' gradlew || true
        dos2unix gradlew 2>/dev/null || true
        chmod +x gradlew
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Gradle version check
      run: ./gradlew --version
      
    - name: Build debug APK
      run: |
        echo "Starting build process..."
        echo "Current directory: $(pwd)"
        echo "Gradle wrapper version:"
        ./gradlew --version
        echo "Available tasks:"
        ./gradlew tasks --all | grep -i assemble || true
        echo "Building APK..."
        ./gradlew assembleDebug --stacktrace --debug || {
          echo "Build failed with assembleDebug, trying app:assembleDebug..."
          ./gradlew app:assembleDebug --stacktrace --debug || {
            echo "Both build commands failed, checking project structure..."
            ls -la app/
            exit 1
          }
        }
        echo "Build completed successfully!"
        
    - name: List build outputs (comprehensive)
      run: |
        echo "=== Post-build directory structure ==="
        ls -la
        echo "=== App directory structure ==="
        ls -la app/ 2>/dev/null || echo "No app directory found"
        echo "=== Build directory exists? ==="
        ls -la app/build 2>/dev/null || echo "No app/build directory found"
        echo "=== All files in app/build (if exists) ==="
        find app/build -type f 2>/dev/null | head -30 || echo "No files in app/build"
        echo "=== Looking for APK files anywhere ==="
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found anywhere"
        echo "=== Looking for any build artifacts ==="
        find . -name "*.aab" -o -name "*.apk" -o -name "*.jar" 2>/dev/null | head -10 || echo "No build artifacts found"
        
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: |
          app/build/outputs/apk/debug/*.apk
          app/build/outputs/apk/**/*.apk
        if-no-files-found: warn
