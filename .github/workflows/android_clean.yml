name: Android CI - Clean Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Git for line endings
        run: git config --global core.autocrlf input
        
      - name: Convert line endings
        run: |
          if command -v dos2unix &> /dev/null; then
            find . -name "*.sh" -exec dos2unix {} \;
            find . -name "gradlew" -exec dos2unix {} \;
          fi
        continue-on-error: true
        
      - name: Make gradlew executable
        run: chmod +x gradlew
        
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: List available tasks
        shell: bash
        run: |
          chmod +x ./gradlew
          ./gradlew tasks
        continue-on-error: true

      - name: Build debug APK  
        shell: bash
        run: |
          chmod +x ./gradlew
          ./gradlew assembleDebug

      - name: Build release APK
        shell: bash
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease

      - name: Sign APK
        if: github.event_name == 'release'
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk
          
      - name: Upload release APK
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Create Release
        if: github.event_name == 'release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
